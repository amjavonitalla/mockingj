<div class="bs-docs-header">
	<div class="container">
		<h1>MockingJ</h1>

		<h3>REST Mocking Server for Developers and Testers</h3>
	</div>
	<a href="https://github.com/amjavonitalla/mockingj">
		<img style="position: absolute; top: 0; right: 0; border: 0;"
		     src="https://camo.githubusercontent.com/a6677b08c955af8400f44c6298f40e7d19cc5b2d/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677261795f3664366436642e706e67"
		     alt="Fork me on GitHub"
		     data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png"></a>
</div>

<div class="container bs-docs-container">
	<div class="row">
		<div class="col-md-9" role="main">
			<div class="bs-docs-section">
				<h1 id="about" class="page-header">MockingJ</h1>

				<p><strong>MockingJ</strong> is a lightweight application that lets you mock HTTP response. You can easily install it locally or use the <a
							href="https://mockingj.herokuapp.com/admin">demo</a> site. </p>

				<p>Made on top of <a href="http://sailsjs.org/">sailsjs</a> MockingJ can be extended and
					customized to your needs
				</p>
			</div>
			<div class="bs-docs-section">
				<h1 id="use-cases" class="page-header">Use Cases</h1>

				<p>
				<ul>
					<li>
						<h3>Mobile and Client App Developers</h3>

						<p>The backend is not yet ready. Instead of hard-coding expected response in your code mock the response and point your app to
							MockingJ.</p>
					</li>
					<li>
						<h3>Testing Negative Scenarios</h3>

						<p>Making the server fail is hard but with MockingJ you can set the response code or even make the request timeout.</p>
					</li>
					<li>
						<h3>Automated Testing</h3>

						<p>Testing a new test case is as easy as switching a new URL. Updating the response when testing different scenarios is tedious. MockingJ
							lets you group mock responses into a test case which you
							can
							access through a unique URL. </p>
					</li>
				</ul>
				</p>

			</div>
			<div class="bs-docs-section">
				<h1 id="getting-started" class="page-header">Getting Started</h1>

				<p>Install NodeJS and Grunt. You can skip this section if you've already installed <strong>NodeJs</strong>,
					<strong>Grunt</strong>, <strong>Bower</strong>, and <strong>Sails</strong>.</p>

				<ol>
					<li><a href="https://nodejs.org/en/download/">Download</a> and install NodeJs</li>
					<li>Install <code>grunt-cli</code> globally with <code>npm install -g grunt-cli</code>.</li>
					<li>Install <code>bower</code> globally with <code>npm install -g bower</code>.</li>
					<li>Finally install <code>sails</code> stable release with <code>npm install -g sails</code>.</li>
				</ol>
			</div>
			<div class="bs-docs-section">
				<h1 id="installing-mockingj" class="page-header">Installing MockingJ</h1>
				Follow the steps below to install MockingJ and it's dependencies.

				<ol>
					<li>
						Fork or clone MockingJ from <a href="https://github.com/amjavonitalla/mockingj">GitHub</a>
					</li>
					<li>
						When installing it for the first time run <code>npm install</code> in the MokingJ root directory. This will download grunt task
						dependencies and other dependencies
					</li>
					<li>
						Run <code>grunt bower</code> and <code>grunt build</code> to download bower dependencies and build MockingJ.
					</li>
					<li>
						Start the server using <code>sails lift</code>. Every time you need to run the server just use <code>sails lift</code>, you may skip the
						previous steps.
					</li>
				</ol>
			</div>
			<div class="bs-docs-section">
				<h1 id="creating-mock-response" class="page-header">Creating your Mock Response</h1>

				<div class="bs-callout bs-callout-warning">
					<h4>UI on the Way</h4>

					<p>We are not yet done building the UI but you can use your favorite REST client for the mean time. We are using <a
								href="https://www.getpostman.com/">Postman</a> for this</p>
				</div>

				<div class="table-responsive">
					<table class="table table-bordered">
						<thead>
						<tr>
							<th>Name</th>
							<th>Type</th>
							<th>Required</th>
							<th>Description</th>
							<th>Sample</th>
						</tr>
						</thead>
						<tbody>
						<tr>
							<td>url</td>
							<td>string</td>
							<td>true</td>
							<td>The URL to mock. As of this moment wildcard is not yet supported.</td>
							<td>/api/user/123</td>
						</tr>
						<tr>
							<td>method</td>
							<td>string</td>
							<td>true</td>
							<td>The mock URL HTTP method type.</td>
							<td>GET, POST, PUT, DELETE</td>
						</tr>
						<tr>
							<td>response</td>
							<td>json</td>
							<td>false</td>
							<td>The response body to return when a request is made to the URL. It can return a JSON object or a JSON array</td>
							<td>
								[ {"username" : "angelo", "role" : "admin" },
									{"username" : "river", "role" : "admin"} ],
								{"username" : "angelo", "role" : "admin" }
							</td>
						</tr>
						<tr>
							<td>responseCode</td>
							<td>integer</td>
							<td>true</td>
							<td>The response code to return when the request is made</td>
							<td>The following are the currently supported response codes 200, 400, 403, 404, 500</td>
						</tr>
						<tr>
							<td>request</td>
							<td>json</td>
							<td>false</td>
							<td>[Optional] The response code to return when the request is made</td>
							<td>The following are the currently supported response codes 200, 400, 403, 404, 500</td>
						</tr>
						</tbody>
					</table>
				</div>
			</div>
			<div class="bs-docs-section">
				<h1 id="test-case" class="page-header">Test Case</h1>
			</div>

		</div>
		<div class="col-md-3" role="complementary">
			<nav class="bs-docs-sidebar">
				<ul class="nav bs-docs-sidenav">
					<li><a href="#about">About</a></li>
					<li><a href="#use-cases">Use Cases</a></li>
					<li><a href="#getting-started">Getting Started</a></li>
					<li><a href="#installing-mockingj">Installing MockingJ</a></li>
					<li><a href="#creating-mock-response">Creating your Mock Response</a></li>
					<li><a href="#test-case">Test Case</a></li>
				</ul>
			</nav>
		</div>
	</div>
</div>

<script type="text/javascript">
	setTimeout(function sunrise() {
		document.getElementsByClassName('bs-docs-header')[0].style.backgroundColor = '#118798';
	}, 0);
</script>